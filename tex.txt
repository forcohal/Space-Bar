<pre>
            My Bonnie lies over the ocean.
          
            My Bonnie lies over the sea.
          
            My Bonnie lies over the ocean.
          
            Oh, bring back my Bonnie to me.
        
            My Bonnie lies over the ocean.
          
            My Bonnie lies over the sea.
          
            My Bonnie lies over the ocean.
          
            Oh, bring back my Bonnie to me.
         
            My Bonnie lies over the ocean.
          
            My Bonnie lies over the sea.
          
            My Bonnie lies over the ocean.
          
            Oh, bring back my Bonnie to me.
          
            My Bonnie lies over the ocean.
          
            My Bonnie lies over the sea.
          
            My Bonnie lies over the ocean.
          
            Oh, bring back my Bonnie to me.
          </pre>






          stars=------------------------------------------------------------------------
const scene = new THREE.Scene();
const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
const renderer = new THREE.WebGLRenderer({ alpha: true });

renderer.setSize(window.innerWidth, window.innerHeight);
renderer.setPixelRatio(window.devicePixelRatio);
renderer.domElement.style.position = "fixed";
renderer.domElement.style.top = "0";
renderer.domElement.style.left = "0";
renderer.domElement.style.zIndex = "-1";  
document.body.appendChild(renderer.domElement);


const stars = [];
const starGeometry = new THREE.SphereGeometry(0.15, 24, 24);
for (let i = 0; i < 500; i++) {
    const starMaterial = new THREE.MeshBasicMaterial({ 
        color: 0xffffff, 
        transparent: true, 
        opacity: Math.random() * 0.5 + 0.5 
    });
    const star = new THREE.Mesh(starGeometry, starMaterial);
    star.position.set(
        (Math.random() - 0.5) * 2000,  
        (Math.random() - 0.5) * 3000,  
        (Math.random() - 0.5) * 2000
    );
    scene.add(star);
    stars.push(star);

    // **Slower Blinking Effect**
    gsap.to(star.material, {
        opacity: Math.random() * 0.5 + 0.5,
        duration: 5 + Math.random() * 5,
        yoyo: true,
        ease: "sine.inOut",
        delay: Math.random() * 5 
    });
}


const dustParticles = [];
const dustGeometry = new THREE.SphereGeometry(0.2, 12, 12);
for (let i = 0; i < 150; i++) {
    const dustMaterial = new THREE.MeshBasicMaterial({ 
        color: 0xffccaa, 
        transparent: true, 
        opacity: 0.7  
    });
    const dust = new THREE.Mesh(dustGeometry, dustMaterial);
    dust.position.set(
        (Math.random() - 0.5) * 1500,  
        (Math.random() - 0.5) * 1500,  
        (Math.random() - 0.5) * 1500
    );
    scene.add(dust);
    dustParticles.push(dust);


    gsap.to(dust.position, {
        x: `+=${(Math.random() - 0.5) * 50}`,
        y: `+=${(Math.random() - 0.5) * 50}`,
        z: `+=${(Math.random() - 0.5) * 50}`,
        duration: 8 + Math.random() * 5, 
        repeat: -1,
        yoyo: true,
        ease: "sine.inOut"
    });
}


function updateCamera() {
    let scrollY = window.scrollY;
    camera.position.y = -scrollY * 0.3;
}
window.addEventListener("scroll", updateCamera);


function animate() {
    requestAnimationFrame(animate);
    

    stars.forEach(star => {
        star.position.z += 0.1;
        if (star.position.z > 500) star.position.z = -500;
    });

    renderer.render(scene, camera);
}
animate();
https://www.flaticon.com/free-icons/spaceship